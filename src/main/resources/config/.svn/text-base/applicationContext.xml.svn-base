<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
           
    <!-- spring注解，自动扫描 -->
    <context:component-scan base-package="com.wls.service"></context:component-scan>
           
    <!-- 定义一个placeholder，用来读取jdbc.properties -->
    <bean id="placeholder" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    	<property name="locations" value="classpath:config/jdbc.properties" />
    </bean>
    <!-- 定义数据源对象，注入属性 dbcp/druid -->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
    	<property name="driverClassName" value="${driverClassname}"/>
    	<property name="url" value="${url}"/>
    	<property name="username" value="${username}"/>
    	<property name="password" value="${password}"/>
    </bean>
    
    <!-- 配置mybatis文件与spring的关联 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    	<property name="dataSource" ref="dataSource" />
    	<property name="configLocation" value="classpath:config/mybatis-config.xml" />
    	<!-- 配置mapper路径 -->
    	<property name="mapperLocations">
    		<list>
    			<!-- <value>classpath*:com/etc/mapper/*-mapper.xml</value> -->
    			<value>classpath*:mapper/*.xml</value>
    		</list>
    	</property>
    </bean>
    <!-- <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" 
    		p:dataSource-ref="dataSource"
    		p:configLocation="classpath:config/mybatis-config.xml"
    		p:mapperLocations="classpath*:com/etc/mapper/*.xml" /> -->
    <!-- 整合配置，让spring扫描所有dao -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
   			p:basePackage="com.wls.dao"
   			 />
   			
   	<!-- 事务管理器 -->
   	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
   			p:dataSource-ref="dataSource" />
   	<!-- aop配置 -->
   	<mvc:interceptors> 
           <mvc:interceptor>
                   <mvc:mapping path="/user/*" /> 
                   <mvc:mapping path="/company/*" /> 
                   <mvc:mapping path="/admin/*" /> 
                   <!-- 需排除拦截的地址 -->  
                   <!--  <mvc:exclude-mapping path="/userController/login"/>  -->
                   <bean class="com.wls.service.interceptor.Intercetptor"/> <!--这个类就是我们自定义的Interceptor -->
          </mvc:interceptor> 
          <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法  -->
    </mvc:interceptors>
</beans>